---
- hosts: all
  handlers:
    - name: restart services
      service:
        name: [
          'httpd',
          'mysqld'
        ]
        state: restarted
      become: yes

  tasks:
    - name: Install Epel and Rmi
      dnf:
        name: [
          'https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm',
          'http://rpms.famillecollet.com/enterprise/remi-release-{{ ansible_distribution_major_version }}.rpm'
        ]
        state: installed
      become: yes

    - name: Import EPEL GPG key.
      rpm_key:
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
        state: present
      become: yes

    - name: Import remi GPG key.
      rpm_key:
        key: http://rpms.remirepo.net/RPM-GPG-KEY-remi
        state: present
      become: yes

    - name: Set Rmi Version
      shell: dnf module enable php:remi-7.4 -y
      become: yes

    - name: Install Packages
      dnf:
        state: installed
        name: [
        'php',
        'php-cli',
        'php-common',
        'php-fpm',
        'php-dom',
        'php-simplexml',
        'php-xml',
        'php-xmlreader',
        'php-curl',
        'php-date',
        'php-exif',
        'php-filter',
        'php-ftp',
        'php-gd',
        'php-hash',
        'php-iconv',
        'php-json',
        'php-libxml',
        'php-pecl-imagick',
        'php-mbstring',
        'php-mysqlnd',
        'php-openssl',
        'php-pcre',
        'php-posix',
        'php-sockets',
        'php-spl',
        'php-tokenizer',
        'php-zlib',
        'httpd',
        'mysql-server',
        'python3-PyMySQL'
        ]
      notify: restart services
      become: yes


    - name: Change file ownership, group and permissions for php
      file:
        path: /var/www/html/
        owner: vagrant
        group: vagrant
        mode: "0775"
      become: yes

    - name: Set php test file
      shell: echo '<?php phpinfo();' >/var/www/html/info.php
      become: yes

    - name: "Create Database MySQL"
      mysql_db:
        name: wordpress_db
        login_user: root
        state: present

    - name: "Create User MySQL"
      mysql_user:
        login_user: root
        name: wordpress_user
        password: 12345
        priv: "wordpress_db.*:ALL"
        state: present

    - name: Download wordpress
      get_url:
        url: https://wordpress.org/latest.tar.gz
        dest: /tmp/wordpress.tar.gz

    - name: Extract wordpress files
      unarchive:
        src: /tmp/wordpress.tar.gz
        dest: /var/www/html
        remote_src: yes
      become: yes

    - name: Change file permissions for wordpress
      file:
        path: /var/www/html/wordpress
        owner: apache
        recurse: yes
      become: yes

    - name: Copy File Wordpress Config
      copy:
        src: "/var/www/html/wordpress/wp-config-sample.php"
        dest: "/var/www/html/wordpress/wp-config.php"
        remote_src: yes
      become: yes

    - name: Configure the wp-config with input database
      replace:
        path: "html/wordpress/wp-config.php"
        regexp: "{{ item.regex }}"
        replace: "{{ item.value }}"
      with_items:
        - { regex: "database_name_here", value: "wordpress_db" }
        - { regex: "username_here", value: "wordpress_user" }
        - { regex: "password_here", value: "12345" }
      become: yes

    - name: Configure Apache to Serve Wordpress
      copy:
        src: 'files/000-default.conf'
        dest: '/etc/apache2/sites-available/000-default.conf'
      become: yes
      notify:
      - restart services
